{"version":3,"sources":["components/inputSalary/InputFullSalary.js","components/progressiveBar/ProgressBarSalary.js","components/inputSalaryCalculation/InputReadOnly.js","helpers/salary.js","helpers/formatHelpers.js","App.js","index.js","components/progressiveBar/progresseBar.module.css"],"names":["InputFullSalary","handleInputChange","event","newSalary","target","value","props","onChangeSalary","fullSalary","this","className","id","type","onChange","htmlFor","Component","ProgressBarSalary","salaryObj","discountINSSPercent","discountIRPFPercent","netSalaryPercent","css","progressiveBar","inssSalary","style","width","irpfSalary","netSalary","InputReadOnly","componentDidUpdate","M","updateTextFields","idInput","inputValue","title","styleInput","disabled","INSS_TABLE","minValue","maxValue","difference","discountPercentage","discountValue","round","toFixed","getPercentFrom","oldValue","newValue","percentValue","calculateSalaryFrom","baseINSS","discountINSS","i","length","currentItem","calculateDiscountINSS","baseIRPF","discountIRPF","calculateDiscountIRPF","formatter","Intl","NumberFormat","currency","formatNumber","format","App","handleSalaryChange","setState","state","styles","inputBaseInss","inputDiscountInss","inputDiscounIrpf","inputNetSalay","color","fontWeight","inputBaseIrpf","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1d2fb681.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class InputFullSalary extends Component {\n\n  handleInputChange = event => {\n    const newSalary = event.target.value;\n    this.props.onChangeSalary(newSalary);\n  }\n\n  render() {\n    const { fullSalary } = this.props;\n\n    return (\n      <div className=\"row\">\n        <div className=\"input-field col s12 offset-m4 m4\">\n          <input id=\"salary_base\" type=\"number\" value={fullSalary} onChange={this.handleInputChange} />\n          <label htmlFor=\"salary_base\">Sal√°rio Base</label>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport css from './progresseBar.module.css';\n\nexport default class ProgressBarSalary extends Component {\n  render() {\n    const {\n      discountINSSPercent,\n      discountIRPFPercent,\n      netSalaryPercent,\n    } = this.props.salaryObj;\n\n    return (\n      <div className=\"row\">\n        <div className=\"col s12\">\n          <div className={css.progressiveBar}>\n            <div\n              className={css.inssSalary}\n              style={{ width: `${discountINSSPercent}%` }}\n            ></div>\n            <div\n              className={css.irpfSalary}\n              style={{ width: `${discountIRPFPercent}%` }}\n            ></div>\n            <div\n              className={css.netSalary}\n              style={{ width: `${netSalaryPercent}%` }}\n            ></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nexport default class InputReadOnly extends Component {\n  componentDidUpdate = () => {\n    M.updateTextFields();\n  };\n\n  render() {\n    const { idInput, inputValue, title, styleInput } = this.props;\n\n    return (\n      <div className=\"input-field col s12 m3\">\n        <input\n          id={idInput}\n          style={styleInput}\n          type=\"text\"\n          value={inputValue}\n          disabled\n        />\n        <label className=\"active\" htmlFor={idInput}>\n          {title}\n        </label>\n      </div>\n    );\n  }\n}\n","// Fonte: https://www.todacarreira.com/calculo-salario-liquido/\n\nconst INSS_TABLE = [\n  {\n    id: 1,\n    minValue: 0,\n    maxValue: 1045,\n    difference: 1045 - 0,\n    discountPercentage: 0.075,\n    discountValue: -1,\n  },\n  {\n    id: 2,\n    minValue: 1045.01,\n    maxValue: 2089.6,\n    difference: 2089.6 - 1045,\n    discountPercentage: 0.09,\n  },\n  {\n    id: 3,\n    minValue: 2089.61,\n    maxValue: 3134.4,\n    difference: 3134.4 - 2089.6,\n    discountPercentage: 0.12,\n  },\n  {\n    id: 4,\n    minValue: 3134.41,\n    maxValue: 6101.06,\n    difference: 6101.06 - 3134.4,\n    discountPercentage: 0.14,\n  },\n];\n\nfunction round(value) {\n  return +value.toFixed(2);\n}\n\nfunction getPercentFrom(oldValue, newValue) {\n  let percentValue = 0;\n\n  if (oldValue && newValue) {\n    percentValue = (oldValue / newValue) * 100.0;\n  }\n\n  return round(percentValue);\n}\n\nfunction calculateDiscountINSS(baseINSS) {\n  let discountINSS = 0;\n\n  if (baseINSS > 6101.07) {\n    return 713.1;\n  }\n\n  for (var i = 0; i < INSS_TABLE.length; i++) {\n    var currentItem = INSS_TABLE[i];\n    let discountValue = 0;\n\n    if (baseINSS > currentItem.maxValue) {\n      // prettier-ignore\n      discountValue = \n        round(currentItem.difference * currentItem.discountPercentage);\n\n      discountINSS += discountValue;\n    } else {\n      // prettier-ignore\n      discountValue = \n        round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\n\n      discountINSS += discountValue;\n      break;\n    }\n  }\n\n  discountINSS = round(discountINSS);\n\n  return discountINSS;\n}\n\nfunction calculateDiscountIRPF(baseIRPF) {\n  let discountIRPF =\n    baseIRPF < 1903.98\n      ? 0\n      : baseIRPF < 2826.65\n      ? round(baseIRPF * 0.075) - 142.8\n      : baseIRPF < 3751.05\n      ? round(baseIRPF * 0.15) - 354.8\n      : baseIRPF < 4664.68\n      ? round(baseIRPF * 0.225) - 636.13\n      : round(baseIRPF * 0.275) - 869.36;\n\n  discountIRPF = round(discountIRPF);\n\n  return discountIRPF;\n}\n\nfunction calculateSalaryFrom(fullSalary) {\n  const baseINSS = +fullSalary;\n  const discountINSS = calculateDiscountINSS(baseINSS);\n\n  const baseIRPF = baseINSS - discountINSS;\n  const discountIRPF = calculateDiscountIRPF(baseIRPF);\n\n  const netSalary = baseINSS - discountINSS - discountIRPF;\n\n  const discountINSSPercent = getPercentFrom(discountINSS, baseINSS);\n  const discountIRPFPercent = getPercentFrom(discountIRPF, baseINSS);\n  const netSalaryPercent = getPercentFrom(netSalary, baseINSS);\n\n  return {\n    baseINSS,\n    discountINSS,\n    baseIRPF,\n    discountIRPF,\n    netSalary,\n    discountINSSPercent,\n    discountIRPFPercent,\n    netSalaryPercent,\n  };\n}\n\nexport { calculateSalaryFrom };\n","const formatter = Intl.NumberFormat('pt-BR', {\n  style: 'currency',\n  currency: 'BRL'\n});\n\nfunction formatNumber(value) {\n  return formatter.format(value);\n}\n\nexport { formatNumber };","import React, { Component } from 'react';\nimport InputFullSalary from './components/inputSalary/InputFullSalary';\nimport ProgressBarSalary from './components/progressiveBar/ProgressBarSalary';\nimport InputReadOnly from './components/inputSalaryCalculation/InputReadOnly';\nimport { calculateSalaryFrom } from './helpers/salary';\nimport { formatNumber } from './helpers/formatHelpers';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      fullSalary: '',\n    };\n  }\n\n  handleSalaryChange = (newSalary) => {\n    this.setState({\n      fullSalary: newSalary,\n    });\n  };\n\n  render() {\n    const { fullSalary } = this.state;\n    let inputValue = calculateSalaryFrom(fullSalary);\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12 center\">\n            <h1>React Sal√°rio</h1>\n          </div>\n        </div>\n\n        <InputFullSalary\n          fullSalary={fullSalary}\n          onChangeSalary={this.handleSalaryChange}\n        />\n\n        <ProgressBarSalary salaryObj={inputValue} />\n\n        <div className=\"row\">\n          <InputReadOnly\n            idInput={'inss_base'}\n            inputValue={`${formatNumber(inputValue.baseINSS)}`}\n            title={'Base INSS'}\n            styleInput={styles.inputBaseInss}\n          />\n\n          <InputReadOnly\n            idInput={'inss_discount'}\n            inputValue={`${formatNumber(inputValue.discountINSS)} (${\n              inputValue.discountINSSPercent\n            }%)`}\n            title={'Desconto INSS'}\n            styleInput={styles.inputBaseInss}\n          />\n\n          <InputReadOnly\n            idInput={'irpf_base'}\n            inputValue={`${formatNumber(inputValue.baseIRPF)}`}\n            title={'Base IRPF'}\n            styleInput={styles.inputDiscountInss}\n          />\n\n          <InputReadOnly\n            idInput={'irpf_discount'}\n            inputValue={`${formatNumber(inputValue.discountIRPF)} (${\n              inputValue.discountIRPFPercent\n            }%)`}\n            title={'Desconto IRPF'}\n            styleInput={styles.inputDiscounIrpf}\n          />\n\n          <InputReadOnly\n            idInput={'net_salary'}\n            inputValue={`${formatNumber(inputValue.netSalary)} (${\n              inputValue.netSalaryPercent\n            }%)`}\n            title={'Sal√°rio L√≠quido'}\n            styleInput={styles.inputNetSalay}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  inputBaseInss: {\n    color: '#000',\n    fontWeight: '700',\n  },\n  inputDiscountInss: {\n    color: '#e67e22',\n    fontWeight: '700',\n  },\n  inputBaseIrpf: {\n    color: '#000',\n    fontWeight: '700',\n  },\n  inputDiscounIrpf: {\n    color: '#c0392b',\n    fontWeight: '700',\n  },\n  inputNetSalay: {\n    color: '#16a085',\n    fontWeight: '700',\n  },\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'jquery';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'materialize-css/dist/js/materialize.min.js';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressiveBar\":\"progresseBar_progressiveBar__11r2P\",\"inssSalary\":\"progresseBar_inssSalary__3cZJx\",\"irpfSalary\":\"progresseBar_irpfSalary__2cDre\",\"netSalary\":\"progresseBar_netSalary__20rTU\"};"],"sourceRoot":""}